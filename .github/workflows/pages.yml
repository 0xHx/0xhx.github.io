# Simple workflow for deploying static content to GitHub Pages
name: Deploy static to Pages

on:
  workflow_dispatch:
  # push:
  #   branches: ["main"]
  schedule:
    - cron: "12 4 * * 6"

permissions:
  contents: read
  pages: write
  id-token: write

env:
  BSITE: "d3d3LnF1aW50eXBlLmNvbQo="
  SITE: null
  PATH_ROOT: null

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Init Ubuntu
        id: init
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install gnupg unzip git   wget curl
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          # import key
          echo "${{ secrets.GPG_XSTREAM2 }}" > ${RUNNER_TEMP}/xstream2.key
          gpg --import ${RUNNER_TEMP}/xstream2.key
          echo "::set-output name=status::success"
        shell: bash

      

      - name: Cache Primes
        id: cache
        if: ( steps.init.outputs.status == 'success' && !cancelled() )
        uses: actions/cache@v3
        with:
          path: html
          key: pages

      - name: Get Htmls for Cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /workdir
          site=`echo ${{ env.BSITE }}|base64 -d`
          wget --user-agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_16) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.2 Safari/605.1.15"  -k -m -np  https://${site}/ . || true
          if [[ ! -d ${site} ]]; then
              ls -al .
              exit 2
          fi 
          mv ${site} html
          echo "User-agent: *" > html/robots.txt
          echo "Disallow: /" >> html/robots.txt
        shell: bash

      - name: Generate Yamls
        id: yamls
        if: ( steps.init.outputs.status == 'success' && !cancelled() )
        run: |
          # add fast
          cp -R html pages
          mkdir -p pages/fast
          gpg --output user.txt --decrypt user.dat
          gpg --output bastip.txt --decrypt bastip.cfg
          for user in `cat user.txt|cut -d, -f1` ; do
            # 创建用户文件夹
            echo ${user}
            # 给出不同区域yaml(vms)、json(vls)版本列表
          done
          # SH 为隐藏版本，根据情况决定是否启用
          echo "fast:`date`" > pages/fast/inde.html
          echo "::set-output name=status::success"
        shell: bash

      - name: Setup Pages
        if: ( !cancelled() )
        uses: actions/configure-pages@v2

      - name: Upload artifact
        if: ( !cancelled() )
        uses: actions/upload-pages-artifact@v1
        with:
          path: pages

      - name: Deploy to GitHub Pages
        if: ( !cancelled() )
        uses: actions/deploy-pages@v1

      - name: Delete Workflow Runs
        uses: Mattraks/delete-workflow-runs@v2

      - name: Clean Up
        uses: AutoModality/action-clean@v1